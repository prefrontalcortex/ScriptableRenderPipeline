editors:
  - version: trunk
platforms:
  - name: Windows64
    type: Unity::VM::GPU
    image: sdet/gamecode_win10:stable
    flavor: b1.large
  - name: OSX
    type: Unity::metal::macmini
    image: slough-ops/macos-10.14-xcode
    flavor: m1.mac
testplatforms:
  - name: Standalone
    args: --suite=playmode --platform=Standalone
  - name: playmode
    args: --suite=playmode
  - name: editmode
    args: --suite=editor --platform=editmode
projects:
  - name: VFXMain
    folder: VisualEffectGraph
    packagename: com.unity.visualeffectgraph
---
{% for project in projects %}
{% for editor in editors %}


{% for testplatform in testplatforms %}
{{ project.name }}_Windows64_{{ testplatform.name }}_{{ editor.version }}:
  name : Test {{ project.name }} on Windows64_{{ testplatform.name }} on version {{ editor.version }}
  agent:
    {% if testplatform.name == "editmode" %}
    type: Unity::VM
    {% else %}
    type: Unity::VM::GPU
    {% endif %} 
    image: sdet/gamecode_win10:stable      
    flavor: b1.large
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git TestProjects/{{ project.folder }}/utr
    - npm install upm-ci-utils -g --registry https://api.bintray.com/npm/unity/unity-npm
    - pip install unity-downloader-cli --extra-index-url https://artifactory.eu-cph-1.unityops.net/api/pypi/common-python/simple
    - cd TestProjects/{{ project.folder }} && unity-downloader-cli -b {{ editor.version }} -c editor --wait --published    

    {% if testplatform.name == "Standalone" %}
    - cd TestProjects/{{ project.folder }} && powershell -command "utr/utr {{ testplatform.args }}Windows64 --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results --timeout=1200"
    {% else %}
    - cd TestProjects/{{ project.folder }} && powershell -command "utr/utr {{ testplatform.args }} --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results"
    {% endif %}
  artifacts:
    logs:
      paths:
        - "**/test-results/**"    
{% endfor %}


{% for testplatform in testplatforms %}
{% if testplatform.name == "editmode" %}
#skip because we don't need a GPU to run editmode tests
{% else %}
{{ project.name }}_OSX_{{ testplatform.name }}_{{ editor.version }}:
  name : Test {{ project.name }} on OSX_{{ testplatform.name }} on version {{ editor.version }}
  agent:
    type: Unity::metal::macmini
    image: slough-ops/macos-10.14-xcode
    flavor: m1.mac
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git TestProjects/{{ project.folder }}/utr
    
    - ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install --user unity-downloader-cli --extra-index-url https://artifactory.eu-cph-1.unityops.net/api/pypi/common-python/simple'"
    - scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" -r ../ScriptableRenderPipeline/ bokken@$BOKKEN_DEVICE_IP:~/ScriptableRenderPipeline
    - scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
    - ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP '/Users/bokken/Library/Python/3.7/bin/unity-downloader-cli -u {{ editor.version }} -c editor --wait --published'
    {% if testplatform.name == "Standalone" %}
    - |
      ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP 'cd ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }} && ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/utr/utr {{ testplatform.args }}OSX  --testproject=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }} --editor-location=/Users/bokken/.Editor --artifacts_path=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results  --timeout=1200'
    {% else %}
    - |
      ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP 'cd ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }} && ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/utr/utr {{ testplatform.args }} --testproject=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }} --editor-location=/Users/bokken/.Editor --artifacts_path=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results'
    {% endif %}
      UTR_RESULT=$?
      mkdir -p TestProjects/{{ project.folder }}/test-results/
      scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results/ TestProjects/{{ project.folder }}/test-results/
      exit $UTR_RESULT

  artifacts:
    logs:
      paths:
        - "**/test-results/**"
{% endif %}
{% endfor %}


All_{{ project.name }}:
  name: All {{ project.name }} CI
  agent:
    name: whatever
    type: Unity::VM
    image: cds-ops/ubuntu-18.04-agent:latest
    flavor: b1.small
  commands:
    - dir
  dependencies:
  {% for platform in platforms %}
  {% for testplatform in testplatforms %}
  {% if platform.name == "OSX_OpenGLCore" %}
  
  {% if testplatform.name == "editmode" %}
    - .yamato/upm-ci-{{ project.name | downcase }}.yml#{{ project.name }}_{{ platform.name }}_{{ testplatform.name }}_{{ editor.version }}
  {% endif %}
  
  {% elsif platform.name == "OSX" %}
  #skip

  {% else %}
    - .yamato/upm-ci-{{ project.name | downcase }}.yml#{{ project.name }}_{{ platform.name }}_{{ testplatform.name }}_{{ editor.version }}  
  {% endif %}
    
  {% endfor %}
  {% endfor %}

{% endfor %}    
{% endfor %}